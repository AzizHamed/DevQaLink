{"version":3,"sources":["components/ReportsTable.js","components/ReportsChart.js","components/ReportsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ReportsTable","_ref","reports","React","createElement","map","report","key","id","test","versionBuild","cluster","result","failureReason","runtime","date","user","ReportsChart","passCount","failCount","totalTests","pieData","labels","datasets","data","backgroundColor","style","width","height","margin","Pie","options","responsive","maintainAspectRatio","plugins","legend","display","position","ReportsContainer","setReports","useState","setPassCount","setFailCount","useEffect","axios","get","then","response","pass","filter","length","fail","catch","error","console","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qPAoCeA,MAjCMC,IAAkB,IAAjB,QAAEC,GAASD,EAC/B,OACEE,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,UAGRD,IAAAC,cAAA,aACGF,EAAQG,IAAKC,GACZH,IAAAC,cAAA,MAAIG,IAAKD,EAAOE,IACdL,IAAAC,cAAA,UAAKE,EAAOG,MACZN,IAAAC,cAAA,UAAKE,EAAOI,cACZP,IAAAC,cAAA,UAAKE,EAAOK,SACZR,IAAAC,cAAA,UAAKE,EAAOM,QACZT,IAAAC,cAAA,UAAKE,EAAOO,eAAiB,OAC7BV,IAAAC,cAAA,UAAKE,EAAOQ,SACZX,IAAAC,cAAA,UAAKE,EAAOS,MACZZ,IAAAC,cAAA,UAAKE,EAAOU,W,QCQTC,MAhCMhB,IAA2C,IAA1C,UAAEiB,EAAS,UAAEC,EAAS,WAAEC,GAAYnB,EACxD,MAAMoB,EAAU,CACdC,OAAQ,CAAIJ,EAAH,UAA0BC,EAAH,WAChCI,SAAU,CACR,CACEC,KAAM,CAACN,EAAWC,GAClBM,gBAAiB,CAAC,UAAW,cAgBnC,OACEtB,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKgB,EAAW,oBAChBjB,IAAAC,cAAA,OAAKsB,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,OAAQ,WACrD1B,IAAAC,cAAC0B,IAAG,CAACN,KAAMH,EAASU,QAfP,CACjBC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CACPC,OAAQ,CACNC,SAAS,EACTC,SAAU,iBCaHC,MA5BUA,KACvB,MAAOpC,EAASqC,GAAcC,mBAAS,KAChCtB,EAAWuB,GAAgBD,mBAAS,IACpCrB,EAAWuB,GAAgBF,mBAAS,GAgB3C,OAdAG,oBAAU,KACRC,IAAMC,IAAI,qCACPC,KAAKC,IACJR,EAAWQ,EAASvB,MAEpB,MAAMwB,EAAOD,EAASvB,KAAKyB,OAAO3C,GAA4B,SAAlBA,EAAOM,QAAmBsC,OAChEC,EAAOJ,EAASvB,KAAKyB,OAAO3C,GAA4B,SAAlBA,EAAOM,QAAmBsC,OAEtET,EAAaO,GACbN,EAAaS,KAEdC,MAAMC,GAASC,QAAQD,MAAM,8BAA+BA,KAC9D,IAGDlD,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAACJ,EAAY,CAACE,QAASA,IACvBC,IAAAC,cAACa,EAAY,CAACC,UAAWA,EAAWC,UAAWA,EAAWC,WAAYlB,EAAQgD,WCbrEK,MAXf,WACE,OACEpD,IAAAC,cAAA,OAAKoD,UAAU,OACbrD,IAAAC,cAAA,UAAQoD,UAAU,cAChBrD,IAAAC,cAAA,UAAI,yBAEND,IAAAC,cAACkC,EAAgB,QCCRmB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,KAAK7C,IAAkD,IAAjD,OAAE2D,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS/D,EACpE2D,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCDDO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlE,IAAAC,cAACD,IAAMmE,WAAU,KACfnE,IAAAC,cAACmD,EAAG,QAORE,M","file":"static/js/main.b01dc475.chunk.js","sourcesContent":["// src/components/ReportsTable.js\nimport React from 'react';\n\nconst ReportsTable = ({ reports }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Test</th>\n          <th>Version-Build</th>\n          <th>Cluster</th>\n          <th>Result</th>\n          <th>Failure Reason</th>\n          <th>Runtime</th>\n          <th>Date</th>\n          <th>User</th>\n        </tr>\n      </thead>\n      <tbody>\n        {reports.map((report) => (\n          <tr key={report.id}>\n            <td>{report.test}</td>\n            <td>{report.versionBuild}</td>\n            <td>{report.cluster}</td>\n            <td>{report.result}</td>\n            <td>{report.failureReason || 'N/A'}</td>\n            <td>{report.runtime}</td>\n            <td>{report.date}</td>\n            <td>{report.user}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ReportsTable;\n","// src/components/ReportsChart.js\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nconst ReportsChart = ({ passCount, failCount, totalTests }) => {\n  const pieData = {\n    labels: [`${passCount} Passed`, `${failCount} Failed`],\n    datasets: [\n      {\n        data: [passCount, failCount],\n        backgroundColor: ['#28a745', '#dc3545'], // Green for passed, Red for failed\n      },\n    ],\n  };\n\n  const pieOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom',\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h3>{totalTests} Completed Tests</h3>\n      <div style={{ width: '400px', height: '400px', margin: '0 auto' }}>\n        <Pie data={pieData} options={pieOptions} />\n      </div>\n    </div>\n  );\n};\n\nexport default ReportsChart;\n","// src/components/ReportsContainer.js\nimport React,{ useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReportsTable from './ReportsTable';\nimport ReportsChart from './ReportsChart';\n\nconst ReportsContainer = () => {\n  const [reports, setReports] = useState([]);\n  const [passCount, setPassCount] = useState(0);\n  const [failCount, setFailCount] = useState(0);\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/reports')\n      .then(response => {\n        setReports(response.data);\n\n        const pass = response.data.filter(report => report.result === 'Pass').length;\n        const fail = response.data.filter(report => report.result === 'Fail').length;\n\n        setPassCount(pass);\n        setFailCount(fail);\n      })\n      .catch(error => console.error('Error fetching the reports:', error));\n  }, []);\n\n  return (\n    <div>\n      <h2>Reports</h2>\n      <ReportsTable reports={reports} />\n      <ReportsChart passCount={passCount} failCount={failCount} totalTests={reports.length} />\n    </div>\n  );\n};\n\nexport default ReportsContainer;\n","// src/App.js\nimport React from 'react';\nimport './App.css';\nimport ReportsContainer from './components/ReportsContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>QA Reports Dashboard</h1>\n      </header>\n      <ReportsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}