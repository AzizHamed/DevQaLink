{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\FailureChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList } from 'recharts';\nimport '../components/FailureChart.css';\nconst FailureChart = ({\n  reports\n}) => {\n  const data = [];\n  let totalTests = 0;\n  reports.forEach(report => {\n    totalTests += 1;\n    const user = data.find(item => item.name === report.user);\n    if (user) {\n      user.total += 1; // Count every test for this user\n      if (report.result === 'Fail') {\n        user.failures += 1;\n      }\n    } else {\n      data.push({\n        name: report.user,\n        failures: report.result === 'Fail' ? 1 : 0,\n        total: 1 // Start counting total tests for this user\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"failure-chart-container card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"failure-chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Users Tests Failure Analysis\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 20,\n      right: 20,\n      left: 20,\n      bottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: [0, totalTests],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"failures\",\n    fill: \"#82ca9d\",\n    barSize: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LabelList, {\n    dataKey: \"failures\",\n    position: \"top\",\n    formatter: value => `${value} Failures`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"total\",\n    fill: \"#8884d8\",\n    barSize: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LabelList, {\n    dataKey: \"total\",\n    position: \"top\",\n    formatter: value => `${value} Tests`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))))));\n};\nexport default FailureChart;","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","LabelList","FailureChart","reports","data","totalTests","forEach","report","user","find","item","name","total","result","failures","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","fill","barSize","position","formatter","value"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/FailureChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList\r\n} from 'recharts';\r\n\r\nimport '../components/FailureChart.css';\r\n\r\nconst FailureChart = ({ reports }) => {\r\n  const data = [];\r\n  let totalTests = 0;\r\n\r\n  reports.forEach(report => {\r\n    totalTests += 1;\r\n    const user = data.find(item => item.name === report.user);\r\n    if (user) {\r\n      user.total += 1; // Count every test for this user\r\n      if (report.result === 'Fail') {\r\n        user.failures += 1;\r\n      }\r\n    } else {\r\n      data.push({ \r\n        name: report.user, \r\n        failures: report.result === 'Fail' ? 1 : 0, \r\n        total: 1  // Start counting total tests for this user\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"failure-chart-container card\">\r\n      <div className=\"card-content\">\r\n        <h2 className=\"failure-chart-title\">Users Tests Failure Analysis</h2>\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <BarChart data={data} margin={{ top: 20, right: 20, left: 20, bottom: 20 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[0, totalTests]} />\r\n            <Tooltip />\r\n            <Bar dataKey=\"failures\" fill=\"#82ca9d\" barSize={50}>\r\n              <LabelList dataKey=\"failures\" position=\"top\" formatter={(value) => `${value} Failures`} />\r\n            </Bar>\r\n            <Bar dataKey=\"total\" fill=\"#8884d8\" barSize={50}>\r\n              <LabelList dataKey=\"total\" position=\"top\" formatter={(value) => `${value} Tests`} />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FailureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}