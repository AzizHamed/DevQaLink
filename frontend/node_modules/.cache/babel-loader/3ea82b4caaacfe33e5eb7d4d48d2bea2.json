{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\FailureChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList } from 'recharts';\nimport '../components/FailureChart.css';\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    const data = payload[0].payload;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, `User: ${data.name}`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, `Failures: ${data.failures} out of ${data.total}`));\n  }\n  return null;\n};\nconst FailureChart = ({\n  reports\n}) => {\n  const data = [];\n  let totalTests = 0;\n  reports.forEach(report => {\n    totalTests += 1;\n    const user = data.find(item => item.name === report.user);\n    if (user) {\n      user.total += 1;\n      if (report.result === 'Fail') {\n        user.failures += 1;\n      }\n    } else {\n      data.push({\n        name: report.user,\n        failures: report.result === 'Fail' ? 1 : 0,\n        total: 1\n      });\n    }\n  });\n\n  // Set the fill color based on the failure rate\n  const updatedData = data.map(user => ({\n    ...user,\n    fillColor: user.failures / user.total >= 0.5 ? '#FF0000' : '#82ca9d' // Red if failures >= 50%, else green\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"failure-chart-container card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"failure-chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Users Tests Failure Analysis\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: updatedData,\n    margin: {\n      top: 20,\n      right: 20,\n      left: 20,\n      bottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: [0, totalTests],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(CustomTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"failures\",\n    barSize: 50,\n    fill: entry => entry.fillColor // Use the precomputed color\n    ,\n    label: {\n      position: 'top',\n      formatter: value => `${value} Failures`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default FailureChart;","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","LabelList","CustomTooltip","active","payload","label","length","data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","failures","total","FailureChart","reports","totalTests","forEach","report","user","find","item","result","push","updatedData","map","fillColor","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","content","barSize","fill","entry","position","formatter","value"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/FailureChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList\r\n} from 'recharts';\r\n\r\nimport '../components/FailureChart.css';\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`User: ${data.name}`}</p>\r\n        <p className=\"desc\">{`Failures: ${data.failures} out of ${data.total}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst FailureChart = ({ reports }) => {\r\n  const data = [];\r\n  let totalTests = 0;\r\n\r\n  reports.forEach(report => {\r\n    totalTests += 1;\r\n    const user = data.find(item => item.name === report.user);\r\n    if (user) {\r\n      user.total += 1;\r\n      if (report.result === 'Fail') {\r\n        user.failures += 1;\r\n      }\r\n    } else {\r\n      data.push({\r\n        name: report.user,\r\n        failures: report.result === 'Fail' ? 1 : 0,\r\n        total: 1\r\n      });\r\n    }\r\n  });\r\n\r\n  // Set the fill color based on the failure rate\r\n  const updatedData = data.map(user => ({\r\n    ...user,\r\n    fillColor: user.failures / user.total >= 0.5 ? '#FF0000' : '#82ca9d' // Red if failures >= 50%, else green\r\n  }));\r\n\r\n  return (\r\n    <div className=\"failure-chart-container card\">\r\n      <div className=\"card-content\">\r\n        <h2 className=\"failure-chart-title\">Users Tests Failure Analysis</h2>\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <BarChart data={updatedData} margin={{ top: 20, right: 20, left: 20, bottom: 20 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[0, totalTests]} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Bar \r\n              dataKey=\"failures\" \r\n              barSize={50}\r\n              fill={(entry) => entry.fillColor} // Use the precomputed color\r\n              label={{ position: 'top', formatter: (value) => `${value} Failures` }}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FailureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}