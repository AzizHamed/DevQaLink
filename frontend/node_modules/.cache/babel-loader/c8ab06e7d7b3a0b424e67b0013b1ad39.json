{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\ReportsTable.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport OpenJiraButton from '../components/OpenJiraButton';\nimport '../components/ReportsTable.css';\nconst ReportsTable = ({\n  reports\n}) => {\n  // Function to determine result color\n  const getResultStyle = result => {\n    switch (result) {\n      case 'Pass':\n        return {\n          color: 'green',\n          fontWeight: 'bold'\n        };\n      // Green and bold for Pass\n      case 'Fail':\n        return {\n          color: 'red',\n          fontWeight: 'bold',\n          textShadow: '1px 1px 2px black'\n        };\n      // Red with shadow for Fail\n      case 'Unresolved':\n        return {\n          color: 'orange',\n          fontWeight: 'bold',\n          textShadow: '1px 1px 2px gray'\n        };\n      // Yellow with shadow for Unresolved\n      default:\n        return {\n          color: 'black',\n          fontWeight: 'normal'\n        };\n      // Default black for other cases\n    }\n  };\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Version Build\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Cluster\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Failure Reason\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Runtime\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, reports.map(report => /*#__PURE__*/React.createElement(TableRow, {\n    key: report.id,\n    style: {\n      background: report.result === 'Fail' ? 'rgba(255, 0, 0, 0.1)' : report.result === 'Unresolved' ? 'rgba(255, 255, 0, 0.2)' : 'white'\n    } // Light red for Fail, yellow for Unresolved\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, report.id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, report.test), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, report.versionBuild), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, report.cluster), /*#__PURE__*/React.createElement(TableCell, {\n    style: getResultStyle(report.result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, report.result), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \" \", report.failureReason), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, report.runtime), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, report.date), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, report.user), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, report.result !== 'Pass' && /*#__PURE__*/React.createElement(OpenJiraButton, {\n    issueDetails: {\n      summary: `Failure in ${report.test}`,\n      description: `Test ID: ${report.id}\n                    Test Name: ${report.test}\n                    Version Build: ${report.versionBuild}\n                    Cluster: ${report.cluster}\n                    Result: ${report.result}\n                    Failure Reason: ${report.failureReason}\n                    Runtime: ${report.runtime}\n                    Date: ${report.date}\n                    User: ${report.user}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }))))));\n};\nexport default ReportsTable;","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableHead","TableRow","OpenJiraButton","ReportsTable","reports","getResultStyle","result","color","fontWeight","textShadow","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","report","key","id","style","background","test","versionBuild","cluster","failureReason","runtime","date","user","issueDetails","summary","description"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/ReportsTable.js"],"sourcesContent":["import React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport OpenJiraButton from '../components/OpenJiraButton';\nimport '../components/ReportsTable.css';\n\nconst ReportsTable = ({ reports }) => {\n  // Function to determine result color\n  const getResultStyle = (result) => {\n    switch (result) {\n      case 'Pass':\n        return { color: 'green', fontWeight: 'bold' }; // Green and bold for Pass\n      case 'Fail':\n        return { color: 'red', fontWeight: 'bold', textShadow: '1px 1px 2px black' }; // Red with shadow for Fail\n      case 'Unresolved':\n        return { color: 'orange', fontWeight: 'bold', textShadow: '1px 1px 2px gray' }; // Yellow with shadow for Unresolved\n      default:\n        return { color: 'black', fontWeight: 'normal' }; // Default black for other cases\n    }\n  };\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Test</TableCell>\n          <TableCell>Version Build</TableCell>\n          <TableCell>Cluster</TableCell>\n          <TableCell>Result</TableCell>\n          <TableCell>Failure Reason</TableCell>\n          <TableCell>Runtime</TableCell>\n          <TableCell>Date</TableCell>\n          <TableCell>User</TableCell>\n          <TableCell>Actions</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {reports.map((report) => (\n          <TableRow \n            key={report.id} \n            style={{ \n              background: report.result === 'Fail' ? 'rgba(255, 0, 0, 0.1)' : report.result === 'Unresolved' ? 'rgba(255, 255, 0, 0.2)' : 'white' \n            }} // Light red for Fail, yellow for Unresolved\n          >\n            <TableCell>{report.id}</TableCell>\n            <TableCell>{report.test}</TableCell>\n            <TableCell>{report.versionBuild}</TableCell>\n            <TableCell>{report.cluster}</TableCell>\n            <TableCell style={getResultStyle(report.result)}>\n              {report.result}\n            </TableCell>\n            <TableCell style={{ color: 'red' }}> {/* Failure reason always in red */}\n              {report.failureReason}\n            </TableCell>\n            <TableCell>{report.runtime}</TableCell>\n            <TableCell>{report.date}</TableCell>\n            <TableCell>{report.user}</TableCell>\n            <TableCell>\n              {report.result !== 'Pass' && (\n                <OpenJiraButton \n                  issueDetails={{\n                    summary: `Failure in ${report.test}`,\n                    description: `Test ID: ${report.id}\n                    Test Name: ${report.test}\n                    Version Build: ${report.versionBuild}\n                    Cluster: ${report.cluster}\n                    Result: ${report.result}\n                    Failure Reason: ${report.failureReason}\n                    Runtime: ${report.runtime}\n                    Date: ${report.date}\n                    User: ${report.user}`\n                  }}\n                />\n              )}\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ReportsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}