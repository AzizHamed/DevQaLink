{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\FailureChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList } from 'recharts';\nimport '../components/FailureChart.css';\nconst FailureChart = ({\n  reports\n}) => {\n  const data = [];\n\n  // Create a map to store the total number of tests and failures per user\n  const userTestMap = {};\n  reports.forEach(report => {\n    // Initialize or update the user's test count and failure count\n    if (!userTestMap[report.user]) {\n      userTestMap[report.user] = {\n        total: 0,\n        failures: 0\n      };\n    }\n    userTestMap[report.user].total += 1;\n    if (report.result === 'Fail') {\n      userTestMap[report.user].failures += 1;\n    }\n  });\n\n  // Populate the data array with users and their failure counts\n  Object.keys(userTestMap).forEach(user => {\n    if (userTestMap[user].failures > 0) {\n      data.push({\n        name: user,\n        failures: userTestMap[user].failures,\n        totalTests: userTestMap[user].total\n      });\n    }\n  });\n\n  // Custom tooltip to show additional information\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const {\n        name,\n        failures,\n        totalTests\n      } = payload[0].payload;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, `${name}: ${failures} failures out of ${totalTests} tests`));\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"failure-chart-container card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"failure-chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Test Failure Analysis\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(CustomTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"failures\",\n    fill: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LabelList, {\n    dataKey: \"failures\",\n    position: \"top\",\n    formatter: (value, entry) => `${value} (${(value / entry.totalTests * 100).toFixed(2)}%)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))))));\n};\nexport default FailureChart;","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","LabelList","FailureChart","reports","data","userTestMap","forEach","report","user","total","failures","result","Object","keys","push","name","totalTests","CustomTooltip","active","payload","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","fill","position","formatter","value","entry","toFixed"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/FailureChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList\r\n} from 'recharts';\r\n\r\nimport '../components/FailureChart.css';\r\n\r\nconst FailureChart = ({ reports }) => {\r\n  const data = [];\r\n\r\n  // Create a map to store the total number of tests and failures per user\r\n  const userTestMap = {};\r\n\r\n  reports.forEach(report => {\r\n    // Initialize or update the user's test count and failure count\r\n    if (!userTestMap[report.user]) {\r\n      userTestMap[report.user] = { total: 0, failures: 0 };\r\n    }\r\n    userTestMap[report.user].total += 1;\r\n    if (report.result === 'Fail') {\r\n      userTestMap[report.user].failures += 1;\r\n    }\r\n  });\r\n\r\n  // Populate the data array with users and their failure counts\r\n  Object.keys(userTestMap).forEach(user => {\r\n    if (userTestMap[user].failures > 0) {\r\n      data.push({ name: user, failures: userTestMap[user].failures, totalTests: userTestMap[user].total });\r\n    }\r\n  });\r\n\r\n  // Custom tooltip to show additional information\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const { name, failures, totalTests } = payload[0].payload;\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p>{`${name}: ${failures} failures out of ${totalTests} tests`}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"failure-chart-container card\">\r\n      <div className=\"card-content\">\r\n        <h2 className=\"failure-chart-title\">Test Failure Analysis</h2>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Bar dataKey=\"failures\" fill=\"#82ca9d\">\r\n              <LabelList\r\n                dataKey=\"failures\"\r\n                position=\"top\"\r\n                formatter={(value, entry) => `${value} (${((value / entry.totalTests) * 100).toFixed(2)}%)`}\r\n              />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FailureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}