{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\ReportsTable.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport OpenJiraButton from '../components/OpenJiraButton'; // Button component import\nimport '../components/ReportsTable.css'; // CSS import\n\nconst ReportsTable = ({\n  reports\n}) => {\n  // Function to determine the text style for the result\n  const getResultStyle = result => {\n    switch (result) {\n      case 'Pass':\n        return {\n          color: 'green',\n          fontWeight: 'bold',\n          fontSize: '1.1em',\n          textShadow: '1px 1px 2px #000'\n        };\n      case 'Fail':\n        return {\n          color: 'red',\n          fontWeight: 'bold',\n          fontSize: '1.1em',\n          textShadow: '1px 1px 2px #000'\n        };\n      case 'Unresolved':\n        return {\n          color: 'yellow',\n          fontWeight: 'bold',\n          fontSize: '1.1em',\n          textShadow: '1px 1px 2px #000'\n        };\n      default:\n        return {\n          color: 'black',\n          fontWeight: 'normal'\n        };\n    }\n  };\n\n  // Function to determine row background color based on the result\n  const getRowStyle = result => {\n    switch (result) {\n      case 'Pass':\n        return {\n          backgroundColor: '#e0f7e4'\n        };\n      // Soft green for pass\n      case 'Fail':\n        return {\n          backgroundColor: '#fddede'\n        };\n      // Soft red for fail\n      case 'Unresolved':\n        return {\n          backgroundColor: '#fff8b0'\n        };\n      // Soft yellow for unresolved\n      default:\n        return {\n          backgroundColor: 'white'\n        };\n      // Default for other values\n    }\n  };\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Version Build\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Cluster\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Failure Reason\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Runtime\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Actions\"), \" \")), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, reports.map(report => /*#__PURE__*/React.createElement(TableRow, {\n    key: report.id,\n    style: {\n      ...getRowStyle(report.result),\n      transition: 'background-color 0.3s ease'\n    },\n    className: \"report-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, report.id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, report.test), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, report.versionBuild), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, report.cluster), /*#__PURE__*/React.createElement(TableCell, {\n    style: getResultStyle(report.result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, report.result), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \" \", report.failureReason), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, report.runtime), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, report.date), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, report.user), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, report.result !== 'Pass' && /*#__PURE__*/React.createElement(OpenJiraButton, {\n    className: \"open-jira-button\",\n    issueDetails: {\n      summary: `Failure in ${report.test}`,\n      // Customize summary\n      description: `Test ID: ${report.id}\n                    Test Name: ${report.test}\n                    Version Build: ${report.versionBuild}\n                    Cluster: ${report.cluster}\n                    Result: ${report.result}\n                    Failure Reason: ${report.failureReason}\n                    Runtime: ${report.runtime}\n                    Date: ${report.date}\n                    User: ${report.user}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), \" \"))));\n};\nexport default ReportsTable;","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableHead","TableRow","OpenJiraButton","ReportsTable","reports","getResultStyle","result","color","fontWeight","fontSize","textShadow","getRowStyle","backgroundColor","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","report","key","id","style","transition","className","test","versionBuild","cluster","failureReason","runtime","date","user","issueDetails","summary","description"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/ReportsTable.js"],"sourcesContent":["import React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport OpenJiraButton from '../components/OpenJiraButton'; // Button component import\nimport '../components/ReportsTable.css'; // CSS import\n\nconst ReportsTable = ({ reports }) => {\n  // Function to determine the text style for the result\n  const getResultStyle = (result) => {\n    switch (result) {\n      case 'Pass':\n        return { color: 'green', fontWeight: 'bold', fontSize: '1.1em', textShadow: '1px 1px 2px #000' }; \n      case 'Fail':\n        return { color: 'red', fontWeight: 'bold', fontSize: '1.1em', textShadow: '1px 1px 2px #000' }; \n      case 'Unresolved':\n        return { color: 'yellow', fontWeight: 'bold', fontSize: '1.1em', textShadow: '1px 1px 2px #000' }; \n      default:\n        return { color: 'black', fontWeight: 'normal' };\n    }\n  };\n\n  // Function to determine row background color based on the result\n  const getRowStyle = (result) => {\n    switch (result) {\n      case 'Pass':\n        return { backgroundColor: '#e0f7e4' }; // Soft green for pass\n      case 'Fail':\n        return { backgroundColor: '#fddede' }; // Soft red for fail\n      case 'Unresolved':\n        return { backgroundColor: '#fff8b0' }; // Soft yellow for unresolved\n      default:\n        return { backgroundColor: 'white' }; // Default for other values\n    }\n  };\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Test</TableCell>\n          <TableCell>Version Build</TableCell>\n          <TableCell>Cluster</TableCell>\n          <TableCell>Result</TableCell>\n          <TableCell>Failure Reason</TableCell>\n          <TableCell>Runtime</TableCell>\n          <TableCell>Date</TableCell>\n          <TableCell>User</TableCell>\n          <TableCell>Actions</TableCell> {/* New column for Jira button */}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {reports.map((report) => (\n          <TableRow \n            key={report.id} \n            style={{ ...getRowStyle(report.result), transition: 'background-color 0.3s ease' }}\n            className=\"report-row\"\n          >\n            <TableCell>{report.id}</TableCell>\n            <TableCell>{report.test}</TableCell>\n            <TableCell>{report.versionBuild}</TableCell>\n            <TableCell>{report.cluster}</TableCell>\n            <TableCell style={getResultStyle(report.result)}>\n              {report.result}\n            </TableCell>\n            <TableCell style={{ color: 'red' }}> {/* Failure reason always in red */}\n              {report.failureReason}\n            </TableCell>\n            <TableCell>{report.runtime}</TableCell>\n            <TableCell>{report.date}</TableCell>\n            <TableCell>{report.user}</TableCell>\n            <TableCell>\n              {report.result !== 'Pass' && (\n                <OpenJiraButton \n                  className=\"open-jira-button\"\n                  issueDetails={{\n                    summary: `Failure in ${report.test}`,  // Customize summary\n                    description: `Test ID: ${report.id}\n                    Test Name: ${report.test}\n                    Version Build: ${report.versionBuild}\n                    Cluster: ${report.cluster}\n                    Result: ${report.result}\n                    Failure Reason: ${report.failureReason}\n                    Runtime: ${report.runtime}\n                    Date: ${report.date}\n                    User: ${report.user}`\n                  }}\n                />\n              )}\n            </TableCell> {/* New cell for Jira button */}\n          </TableRow>\n        ))}\n      </TableBody> \n    </Table>\n  );\n};\n\nexport default ReportsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}