{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\full stack\\\\Dell Project\\\\frontend\\\\src\\\\components\\\\ReportsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReportsChart from './ReportsChart';\nimport ReportsTable from './ReportsTable';\nimport { Container, Grid, Box, Typography } from '@mui/material';\nconst ReportsPage = () => {\n  const [reports, setReports] = useState([]);\n  const [passCount, setPassCount] = useState(0);\n  const [failCount, setFailCount] = useState(0);\n  const [unresolvedCount, setUnresolvedCount] = useState(0);\n  const [filteredReports, setFilteredReports] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/reports').then(response => {\n      setReports(response.data);\n      const pass = response.data.filter(report => report.result === 'Pass').length;\n      const fail = response.data.filter(report => report.result === 'Fail').length;\n      const unresolved = response.data.filter(report => report.result === 'Unresolved').length;\n      setPassCount(pass);\n      setFailCount(fail);\n      setUnresolvedCount(unresolved);\n    }).catch(error => console.error('Error fetching the reports:', error));\n  }, []);\n  const handleFilter = status => {\n    if (status) {\n      const filtered = reports.filter(report => report.result === status);\n      setFilteredReports(filtered);\n    } else {\n      setFilteredReports(null); // Reset to show all reports\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      backgroundColor: '#f4f6f8',\n      padding: '20px',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    mb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportsChart, {\n    passCount: passCount,\n    failCount: failCount,\n    unresolvedCount: unresolvedCount,\n    totalTests: reports.length,\n    onSegmentClick: handleFilter,\n    reports: reports,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: '20px',\n      backgroundColor: '#fff',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"div\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Report Analysis\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"This report provides a detailed analysis of the test results. The 3D pie chart on the left represents the distribution of pass, fail, and unresolved cases. Below is a table listing each test with additional details such as version build, cluster, and user.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Insights:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, passCount, \" tests passed successfully.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, failCount, \" tests failed.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, unresolvedCount, \" tests are unresolved.\")))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReportsTable, {\n    reports: filteredReports || reports,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\nexport default ReportsPage;","map":{"version":3,"names":["React","useState","useEffect","axios","ReportsChart","ReportsTable","Container","Grid","Box","Typography","ReportsPage","reports","setReports","passCount","setPassCount","failCount","setFailCount","unresolvedCount","setUnresolvedCount","filteredReports","setFilteredReports","get","then","response","data","pass","filter","report","result","length","fail","unresolved","catch","error","console","handleFilter","status","filtered","createElement","maxWidth","sx","backgroundColor","padding","borderRadius","boxShadow","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","display","flexDirection","alignItems","mb","totalTests","onSegmentClick","variant","component","gutterBottom","color","mt"],"sources":["C:/Users/Win10/Desktop/full stack/Dell Project/frontend/src/components/ReportsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReportsChart from './ReportsChart';\nimport ReportsTable from './ReportsTable';\nimport { Container, Grid, Box, Typography } from '@mui/material';\n\nconst ReportsPage = () => {\n  const [reports, setReports] = useState([]);\n  const [passCount, setPassCount] = useState(0);\n  const [failCount, setFailCount] = useState(0);\n  const [unresolvedCount, setUnresolvedCount] = useState(0);\n  const [filteredReports, setFilteredReports] = useState(null); \n\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/reports')\n      .then(response => {\n        setReports(response.data);\n\n        const pass = response.data.filter(report => report.result === 'Pass').length;\n        const fail = response.data.filter(report => report.result === 'Fail').length;\n        const unresolved = response.data.filter(report => report.result === 'Unresolved').length;\n\n        setPassCount(pass);\n        setFailCount(fail);\n        setUnresolvedCount(unresolved);\n      })\n      .catch(error => console.error('Error fetching the reports:', error));\n  }, []);\n\n  const handleFilter = (status) => {\n    if (status) {\n      const filtered = reports.filter(report => report.result === status);\n      setFilteredReports(filtered);\n    } else {\n      setFilteredReports(null); // Reset to show all reports\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ backgroundColor: '#f4f6f8', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={8}>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={4}>\n            <ReportsChart \n              passCount={passCount} \n              failCount={failCount} \n              unresolvedCount={unresolvedCount} \n              totalTests={reports.length} \n              onSegmentClick={handleFilter} \n              reports={reports} \n            />\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box sx={{ padding: '20px', backgroundColor: '#fff', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\n            <Typography variant=\"h6\" component=\"div\" gutterBottom>\n              Report Analysis\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" mb={2}>\n              This report provides a detailed analysis of the test results. The 3D pie chart on the left represents the distribution of pass, fail, and unresolved cases. \n              Below is a table listing each test with additional details such as version build, cluster, and user.\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n              Insights:\n              <ul>\n                <li>{passCount} tests passed successfully.</li>\n                <li>{failCount} tests failed.</li>\n                <li>{unresolvedCount} tests are unresolved.</li>\n              </ul>\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n      <Box mt={4}>\n        <ReportsTable reports={filteredReports || reports} />\n      </Box>\n    </Container>\n  );\n};\n\nexport default ReportsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}